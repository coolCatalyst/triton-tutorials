# Copyright 2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

ensemble_scheduling {
  step [
    {
      model_name: "model1"
      model_version: -1
      input_map {
        key: "model_1_input_string"
        value: "ensemble_input_string"
      },
      input_map {
        key: "model_1_input_UINT8_array"
        value: "ensemble_input_UINT8_array"
      },
      input_map {
        key: "model_1_input_INT8_array"
        value: "ensemble_input_INT8_array"
      },
      input_map {
        key: "model_1_input_FP32_image"
        value: "ensemble_input_FP32_image"
      },
      input_map {
        key: "model_1_input_bool"
        value: "ensemble_input_bool"
      }
      output_map {
        key: "model_1_output_string"
        value: "model1_to_model2_string"
      },
      output_map {
        key: "model_1_output_UINT8_array"
        value: "model1_to_model2_uint8"
      },
      output_map {
        key: "model_1_output_INT8_array"
        value: "model1_to_model2_int8"
      },
      output_map {
        key: "model_1_output_FP32_image"
        value: "model1_to_model2_image"
      },
      output_map {
        key: "model_1_output_bool"
        value: "model1_to_model2_bool"
      }
    },
    {
      model_name: "model2"
      model_version: -1
      input_map {
        key: "model_2_input_string"
        value: "model1_to_model2_string"
      },
      input_map {
        key: "model_2_input_UINT8_array"
        value: "model1_to_model2_uint8"
      },
      input_map {
        key: "model_2_input_INT8_array"
        value: "model1_to_model2_int8"
      },
      input_map {
        key: "model_2_input_FP32_image"
        value: "model1_to_model2_image"
      },
      input_map {
        key: "model_2_input_bool"
        value: "model1_to_model2_bool"
      }
      output_map {
        key: "model_2_output_string"
        value: "ensemble_output_string"
      },
      output_map {
        key: "model_2_output_UINT8_array"
        value: "ensemble_output_UINT8_array"
      },
      output_map {
        key: "model_2_output_INT8_array"
        value: "ensemble_output_INT8_array"
      },
      output_map {
        key: "model_2_output_FP32_image"
        value: "ensemble_output_FP32_image"
      },
      output_map {
        key: "model_2_output_bool"
        value: "ensemble_output_bool"
      }
    }
  ]
}
